<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Egghead on juri.strumpflohner</title>
    <link>https://juristr.com/categories/egghead/</link>
    <description>Recent content in Egghead on juri.strumpflohner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Juri Strumpflohner - All rights reserved</copyright>
    <lastBuildDate>Wed, 04 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://juristr.com/categories/egghead/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Demystifying dynamic Forms in Angular</title>
      <link>https://juristr.com/blog/2017/10/demystify-dynamic-angular-forms/</link>
      <pubDate>Wed, 04 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://juristr.com/blog/2017/10/demystify-dynamic-angular-forms/</guid>
      <description>Heared about reactive Angular forms? Maybe even about dynamic forms? Never tried because you think itâ€™s too complicated to setup and an overkill for your common use cases?</description>
    </item>
    
    <item>
      <title>Intercept HTTP Requests in Angular</title>
      <link>https://juristr.com/blog/2017/08/intercept-http-requests-in-angular/</link>
      <pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://juristr.com/blog/2017/08/intercept-http-requests-in-angular/</guid>
      <description>Angular version 4.3.1 introduced one important new feature: the new HTTP client. Not only did it bring optimizations in how we can execute requests to backend APIs, but it made intercepting HTTP requests extremely easy.</description>
    </item>
    
  </channel>
</rss>